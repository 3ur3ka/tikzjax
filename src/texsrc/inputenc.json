{
    "Filename": "inputenc.sty",
    "FileBytes": "JSUKJSUgVGhpcyBpcyBmaWxlIGBpbnB1dGVuYy5zdHknLAolJSBnZW5lcmF0ZWQgd2l0aCB0aGUgZG9jc3RyaXAgdXRpbGl0eS4KJSUKJSUgVGhlIG9yaWdpbmFsIHNvdXJjZSBmaWxlcyB3ZXJlOgolJQolJSBpbnB1dGVuYy5kdHggICh3aXRoIG9wdGlvbnM6IGBwYWNrYWdlJykKJSUgCiUlIFRoaXMgaXMgYSBnZW5lcmF0ZWQgZmlsZS4KJSUgCiUlIFRoZSBzb3VyY2UgaXMgbWFpbnRhaW5lZCBieSB0aGUgTGFUZVggUHJvamVjdCB0ZWFtIGFuZCBidWcKJSUgcmVwb3J0cyBmb3IgaXQgY2FuIGJlIG9wZW5lZCBhdCBodHRwczovL2xhdGV4LXByb2plY3Qub3JnL2J1Z3MuaHRtbAolJSAoYnV0IHBsZWFzZSBvYnNlcnZlIGNvbmRpdGlvbnMgb24gYnVnIHJlcG9ydHMgc2VudCB0byB0aGF0IGFkZHJlc3MhKQolJSAKJSUgCiUlIENvcHlyaWdodCAoQykgMTk5My0yMDIwCiUlIFRoZSBMYVRlWDMgUHJvamVjdCBhbmQgYW55IGluZGl2aWR1YWwgYXV0aG9ycyBsaXN0ZWQgZWxzZXdoZXJlCiUlIGluIHRoaXMgZmlsZS4KJSUgCiUlIFRoaXMgZmlsZSB3YXMgZ2VuZXJhdGVkIGZyb20gZmlsZShzKSBvZiB0aGUgTGFUZVggYmFzZSBzeXN0ZW0uCiUlIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiUlIAolJSBJdCBtYXkgYmUgZGlzdHJpYnV0ZWQgYW5kL29yIG1vZGlmaWVkIHVuZGVyIHRoZQolJSBjb25kaXRpb25zIG9mIHRoZSBMYVRlWCBQcm9qZWN0IFB1YmxpYyBMaWNlbnNlLCBlaXRoZXIgdmVyc2lvbiAxLjNjCiUlIG9mIHRoaXMgbGljZW5zZSBvciAoYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLgolJSBUaGUgbGF0ZXN0IHZlcnNpb24gb2YgdGhpcyBsaWNlbnNlIGlzIGluCiUlICAgIGh0dHBzOi8vd3d3LmxhdGV4LXByb2plY3Qub3JnL2xwcGwudHh0CiUlIGFuZCB2ZXJzaW9uIDEuM2Mgb3IgbGF0ZXIgaXMgcGFydCBvZiBhbGwgZGlzdHJpYnV0aW9ucyBvZiBMYVRlWAolJSB2ZXJzaW9uIDIwMDggb3IgbGF0ZXIuCiUlIAolJSBUaGlzIGZpbGUgaGFzIHRoZSBMUFBMIG1haW50ZW5hbmNlIHN0YXR1cyAibWFpbnRhaW5lZCIuCiUlIAolJSBUaGlzIGZpbGUgbWF5IG9ubHkgYmUgZGlzdHJpYnV0ZWQgdG9nZXRoZXIgd2l0aCBhIGNvcHkgb2YgdGhlIExhVGVYCiUlIGJhc2Ugc3lzdGVtLiBZb3UgbWF5IGhvd2V2ZXIgZGlzdHJpYnV0ZSB0aGUgTGFUZVggYmFzZSBzeXN0ZW0gd2l0aG91dAolJSBzdWNoIGdlbmVyYXRlZCBmaWxlcy4KJSUgCiUlIFRoZSBsaXN0IG9mIGFsbCBmaWxlcyBiZWxvbmdpbmcgdG8gdGhlIExhVGVYIGJhc2UgZGlzdHJpYnV0aW9uIGlzCiUlIGdpdmVuIGluIHRoZSBmaWxlIGBtYW5pZmVzdC50eHQnLiBTZWUgYWxzbyBgbGVnYWwudHh0JyBmb3IgYWRkaXRpb25hbAolJSBpbmZvcm1hdGlvbi4KJSUgCiUlIFRoZSBsaXN0IG9mIGRlcml2ZWQgKHVucGFja2VkKSBmaWxlcyBiZWxvbmdpbmcgdG8gdGhlIGRpc3RyaWJ1dGlvbgolJSBhbmQgY292ZXJlZCBieSBMUFBMIGlzIGRlZmluZWQgYnkgdGhlIHVucGFja2luZyBzY3JpcHRzICh3aXRoCiUlIGV4dGVuc2lvbiAuaW5zKSB3aGljaCBhcmUgcGFydCBvZiB0aGUgZGlzdHJpYnV0aW9uLgoKClxOZWVkc1RlWEZvcm1hdHtMYVRlWDJlfVsxOTk1LzEyLzAxXQpcUHJvdmlkZXNQYWNrYWdle2lucHV0ZW5jfQogICBbMjAyMC8wOC8wMSB2MS4zZCBJbnB1dCBlbmNvZGluZyBmaWxlXQpcZGVmXERlY2xhcmVJbnB1dE1hdGgjMXslCiAgIFxAaW5wZW5jQHRlc3QKICAgXGJncm91cAogICAgICBcdWNjb2RlYFx+IzElCiAgICAgIFx1cHBlcmNhc2V7JQogICBcZWdyb3VwCiAgICAgIFxkZWZ+JQogICB9JQp9ClxkZWZcRGVjbGFyZUlucHV0VGV4dCMxIzJ7JQogICBcZGVmXHJlc2VydmVkQGEjIzEgJHt9JQogICBcZGVmXHJlc2VydmVkQGJ7IzJ9JQogICBcaWZjYXRfXGV4cGFuZGFmdGVyXHJlc2VydmVkQGFcbWVhbmluZ1xyZXNlcnZlZEBiJCAkXyUKICAgICAgXERlY2xhcmVJbnB1dE1hdGh7IzF9eyMyfSUKICAgXGVsc2UKICAgICAgXERlY2xhcmVJbnB1dE1hdGh7IzF9e1xJZUN7IzJ9fSUKICAgXGZpCn0KXGRlZlxJZUN7JQogIFxpZnhccHJvdGVjdFxAdHlwZXNldEBwcm90ZWN0CiAgICBcZXhwYW5kYWZ0ZXJcQGZpcnN0b2ZvbmUKICBcZWxzZQogICAgXG5vZXhwYW5kXEllQwogIFxmaQp9ClxpZnhcVW1hdGhjb2RlXEB1bmRlZmluZWQKXGRlZlxpbnB1dGVuY29kaW5nIzF7JQogIFxlZGVmXHJlc2VydmVkQGF7IzF9JQogIFxpZnhccmVzZXJ2ZWRAYVxpbnB1dGVuY29kaW5nbmFtZQogIFxlbHNlCiAgXHRoZVxpbnBlbmNAcHJlaG9vawogIFxnZGVmXEBpbnBlbmNAdGVzdHtcZ2xvYmFsXGxldFxAaW5wZW5jQHRlc3RccmVsYXh9JQogIFxlZGVmXEBpbnBlbmNAdW5kZWZpbmVke1xub2V4cGFuZFxwcm90ZWN0XG5vZXhwYW5kXEBpbnBlbmNAdW5kZWZpbmVkQHsjMX19JQogIFxlZGVmXGlucHV0ZW5jb2RpbmduYW1leyMxfSUKICBcQGlucGVuY0Bsb29wXF5eQVxeXkglCiAgXEBpbnBlbmNAbG9vcFxeXktcXl5LJQogIFxAaW5wZW5jQGxvb3BcXl5OXF5eXyUKICBcQGlucGVuY0Bsb29wXF5eP1xeXmZmJQogIFx4ZGVmXHNhdmVkQGVuZGxpbmVjaGFyQGNvZGV7XHRoZVxlbmRsaW5lY2hhcn0lCiAgXGVuZGxpbmVjaGFyXG1AbmUKICBceGRlZlxzYXZlZEBzcGFjZUBjYXRjb2Rle1x0aGVcY2F0Y29kZWBcIH0lCiAgXGNhdGNvZGVgXCA5XHJlbGF4CiAgXHhkZWZcc2F2ZWRAYXRAY2F0Y29kZXtcdGhlXGNhdGNvZGVgXEB9JQogIFxtYWtlYXRsZXR0ZXIKICBceGRlZlxzYXZlZEBwZXJjZW50QGNhdGNvZGV7XHRoZVxjYXRjb2RlYFwlfSUKICBcY2F0Y29kZWBcJTE0XHJlbGF4CiAgXGlucHV0eyMxLmRlZn0lCiAgXGVuZGxpbmVjaGFyXHNhdmVkQGVuZGxpbmVjaGFyQGNvZGVccmVsYXgKICBcY2F0Y29kZWBcIFxzYXZlZEBzcGFjZUBjYXRjb2RlXHJlbGF4CiAgXGNhdGNvZGVgXEBcc2F2ZWRAYXRAY2F0Y29kZVxyZWxheAogIFxjYXRjb2RlYFwlXHNhdmVkQHBlcmNlbnRAY2F0Y29kZVxyZWxheAogIFxpZnhcQGlucGVuY0B0ZXN0XHJlbGF4XGVsc2UKICAgIFxQYWNrYWdlV2FybmluZ3tpbnB1dGVuY30lCiAgICAgICAgICAgICB7Tm8gY2hhcmFjdGVycyBkZWZpbmVkXE1lc3NhZ2VCcmVhawogICAgICAgICAgICAgIGJ5IGlucHV0IGVuY29kaW5nIGNoYW5nZSB0byBgIzEnXE1lc3NhZ2VCcmVha30lCiAgXGZpCiAgXHRoZVxpbnBlbmNAcG9zdGhvb2sKICBcZmkKfQpcZWxzZQpcZGVmXGlucHV0ZW5jb2RpbmcjMXslClxlZGVmXHJlc2VydmVkQGF7IzF9JQpcZGVmXHJlc2VydmVkQGJ7dXRmOHh9JQpcaWZ4XHJlc2VydmVkQGFccmVzZXJ2ZWRAYlxkZWZccmVzZXJ2ZWRAYXt1dGY4fVxmaQpcZGVmXHJlc2VydmVkQGJ7dXRmOH0lClxpZnhccmVzZXJ2ZWRAYVxyZXNlcnZlZEBiClxQYWNrYWdlV2FybmluZ05vTGluZQogICAge2lucHV0ZW5jfSUKICAgIHtpbnB1dGVuYyBwYWNrYWdlIGlnbm9yZWQgd2l0aCB1dGY4IGJhc2VkIGVuZ2luZXN9JQpcZWxzZQpcZGVmXHJlc2VydmVkQGJ7eC1hc2NpaX0lClxpZnhccmVzZXJ2ZWRAYVxyZXNlcnZlZEBiXGRlZlxyZXNlcnZlZEBhe2FzY2lpfVxmaQpcZGVmXHJlc2VydmVkQGJ7YXNjaWl9JQpcaWZ4XHJlc2VydmVkQGFccmVzZXJ2ZWRAYgpcUGFja2FnZVdhcm5pbmdOb0xpbmUKICAgIHtpbnB1dGVuY30lCiAgICB7aW5wdXRlbmMgY2FuJ3QgYmUgdXNlZCB0byBlbnN1cmUgN2JpdCBjbGVhbiBzb3VyY2VcTWVzc2FnZUJyZWFrCiAgICB3aXRoIGEgdXRmIGVuZ2luZTogUGFja2FnZSBpZ25vcmVkOiB1dGY4IGFzc3VtZWR9JQpcZWxzZQpcUGFja2FnZUVycm9yCiAgICB7aW5wdXRlbmN9JQogICAge2lucHV0ZW5jIGlzIG5vdCBkZXNpZ25lZCBmb3IgeGV0ZXggb3IgbHVhdGV4LlxNZXNzYWdlQnJlYWsKICAgICBvbmx5IFVURi04IHN1cHBvcnRlZH0lCiAgICB7Rm9yIHhlbGF0ZXggb3IgbHVhbGF0ZXggc2F2ZSB0aGUgZG9jdW1lbnQgaW4gVVRGLTggZW5jb2RpbmdcTWVzc2FnZUJyZWFrCiAgICBhbmQgZG8gbm90IHVzZSBpbnB1dGVuYywgb3IgdXNlIHRoZSBbdXRmOF0gb3B0aW9uLn0KXGZpClxmaQp9ClxmaQpcaWZ4XGlucGVuY0BwcmVob29rXEB1bmRlZmluZWRcbmV3dG9rc1xpbnBlbmNAcHJlaG9va1xmaQpcaWZ4XGlucGVuY0Bwb3N0aG9va1xAdW5kZWZpbmVkXG5ld3Rva3NcaW5wZW5jQHBvc3Rob29rXGZpClxkZWZcQGlucGVuY0B1bmRlZmluZWRAIzF7XFBhY2thZ2VFcnJvcntpbnB1dGVuY30lCiAgICAgICAge0tleWJvYXJkIGNoYXJhY3RlciB1c2VkIGlzIHVuZGVmaW5lZFxNZXNzYWdlQnJlYWsKICAgICAgICAgaW4gaW5wdXRlbmNvZGluZyBgIzEnfSUKICAgICAgIHtZb3UgbmVlZCB0byBwcm92aWRlIGEgIGRlZmluaXRpb24gd2l0aAogICAgICAgIFxub2V4cGFuZFxEZWNsYXJlSW5wdXRUZXh0XE1lc3NhZ2VCcmVhayBvcgogICAgICAgIFxub2V4cGFuZFxEZWNsYXJlSW5wdXRNYXRoIGJlZm9yZSB1c2luZyB0aGlzIGtleS59fSUKXGRlZlxAaW5wZW5jQGxvb3AjMSMyeyUKICBcQHRlbXBjbnRhYCMxXHJlbGF4CiAgXGxvb3AKICAgIFxjYXRjb2RlXEB0ZW1wY250YVxhY3RpdmUKICAgIFxiZ3JvdXAKICAgICAgXHVjY29kZWBcflxAdGVtcGNudGEKICAgICAgXHVwcGVyY2FzZXslCiAgICBcZWdyb3VwCiAgICAgICAgIFxsZXR+XEBpbnBlbmNAdW5kZWZpbmVkCiAgICAgIH0lCiAgXGlmbnVtXEB0ZW1wY250YTxgIzJccmVsYXgKICAgICBcYWR2YW5jZVxAdGVtcGNudGFcQG5lCiAgXHJlcGVhdH0KXERlY2xhcmVPcHRpb257dXRmOHh9e1xpZmRlZmluZWRcVXNlUmF3SW5wdXRFbmNvZGluZwogICAgICAgICAgICAgICAgICAgICAgICBcVXNlUmF3SW5wdXRFbmNvZGluZwogICAgICAgICAgICAgICAgICAgICAgXGZpCiAgICAgICAgICAgICAgICAgICAgICBcaW5wdXRlbmNvZGluZ3tcQ3VycmVudE9wdGlvbn19ClxEZWNsYXJlT3B0aW9uKntcaW5wdXRlbmNvZGluZ3tcQ3VycmVudE9wdGlvbn19ClxQcm9jZXNzT3B0aW9ucwpcZW5kaW5wdXQKJSUKJSUgRW5kIG9mIGZpbGUgYGlucHV0ZW5jLnN0eScuCg=="
}